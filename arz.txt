/*
SPRINT 3
RM563620 - Henrique Martins - 1TDSPF
RM563088 - Henrique Texeira - 1TDSPF
RM562086 - Henrique Gonçalves Pacheco Costa - 1TDSPK
*/

/*
DROP TABLE NOTIFICACAO;
DROP TABLE AGENDAMENTO;
DROP TABLE HISTORICO_COMPARECIMENTO;
DROP TABLE TIPO_CONSULTA;
DROP TABLE PROFISSIONAL_SAUDE;
DROP TABLE PACIENTE;
DROP TABLE SISTEMA_ADM;
*/

-- Tabela para usuários Administradores do Sistema.
CREATE TABLE SISTEMA_ADM (
    id_sistema_adm      NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    email               VARCHAR2(100) NOT NULL,
    senha               VARCHAR2(100) NOT NULL, -- Lembre-se de armazenar o HASH da senha, não a senha pura.
    permissao           CHAR(1) DEFAULT 'N' NOT NULL,
    CONSTRAINT sistema_adm_email_un UNIQUE (email),
    CONSTRAINT sistema_adm_permissao_ck CHECK (permissao IN ('S', 'N'))
);

-- Tabela de Pacientes.
CREATE TABLE PACIENTE (
    id_paciente         NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    nome                VARCHAR2(100) NOT NULL,
    email               VARCHAR2(100) NOT NULL,
    cpf                 VARCHAR2(14) NOT NULL,
    telefone            VARCHAR2(20),
    senha               VARCHAR2(255) NOT NULL, -- Lembre-se de armazenar o HASH da senha, não a senha pura.
    prontuario          NUMBER(10) NOT NULL,
    CONSTRAINT paciente_email_un UNIQUE (email),
    CONSTRAINT paciente_cpf_un UNIQUE (cpf),
    CONSTRAINT paciente_prontuario_un UNIQUE (prontuario)
);

-- Tabela de Profissionais de Saúde.
CREATE TABLE PROFISSIONAL_SAUDE (
    id_profissional     NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    nome                VARCHAR2(100) NOT NULL,
    email               VARCHAR2(100) NOT NULL,
    cpf                 VARCHAR2(14) NOT NULL,
    telefone            VARCHAR2(20),
    senha               VARCHAR2(255) NOT NULL, -- Lembre-se de armazenar o HASH da senha, não a senha pura.
    crm                 NUMBER(10) NOT NULL,
    estado_crm          CHAR(2) NOT NULL,
    especialidade       VARCHAR2(100) NOT NULL,
    CONSTRAINT profissional_saude_email_un UNIQUE (email),
    CONSTRAINT profissional_saude_cpf_un UNIQUE (cpf),
    CONSTRAINT profissional_saude_crm_estado_un UNIQUE (crm, estado_crm)
);

-- Tabela para os tipos de consulta.
CREATE TABLE TIPO_CONSULTA (
    id_tipo_consulta    NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    tipo                VARCHAR2(100) NOT NULL,
    duracao_estimada    NUMBER, -- CORREÇÃO: Duração em minutos para facilitar cálculos.
    observacao          VARCHAR2(500)
);

-- Tabela para o histórico do paciente.
CREATE TABLE HISTORICO_COMPARECIMENTO (
    id_historico        NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    total_consultas     NUMBER DEFAULT 0 NOT NULL,
    comparecimentos     NUMBER DEFAULT 0 NOT NULL,
    faltas              NUMBER DEFAULT 0 NOT NULL,
    id_paciente         NUMBER NOT NULL,
    CONSTRAINT historico_comparecimento_paciente_fk FOREIGN KEY (id_paciente) REFERENCES PACIENTE(id_paciente),
    CONSTRAINT historico_comparecimento_paciente_un UNIQUE (id_paciente) -- CORREÇÃO: Garante um histórico por paciente.
);

-- Tabela principal de Agendamentos.
CREATE TABLE AGENDAMENTO (
    id_agendamento      NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    data_hora           TIMESTAMP NOT NULL,
    status              VARCHAR2(20) NOT NULL,
    id_paciente         NUMBER NOT NULL,
    id_profissional     NUMBER NOT NULL,
    id_tipo_consulta    NUMBER NOT NULL,
    CONSTRAINT agendamento_paciente_fk FOREIGN KEY (id_paciente) REFERENCES PACIENTE(id_paciente),
    CONSTRAINT agendamento_profissional_fk FOREIGN KEY (id_profissional) REFERENCES PROFISSIONAL_SAUDE(id_profissional),
    CONSTRAINT agendamento_tipo_consulta_fk FOREIGN KEY (id_tipo_consulta) REFERENCES TIPO_CONSULTA(id_tipo_consulta),
    CONSTRAINT agendamento_status_ck CHECK (status IN ('AGENDADO', 'CONFIRMADO', 'CANCELADO', 'REALIZADO'))
);

-- Tabela para registrar as notificações enviadas.
CREATE TABLE NOTIFICACAO (
    id_notificacao      NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    mensagem            VARCHAR2(1000) NOT NULL,
    canal_envio         VARCHAR2(10) NOT NULL,
    destinatario        VARCHAR2(100) NOT NULL,
    data_envio          TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id_agendamento      NUMBER NOT NULL,
    CONSTRAINT notificacao_agendamento_fk FOREIGN KEY (id_agendamento) REFERENCES AGENDAMENTO(id_agendamento),
    CONSTRAINT notificacao_canal_envio_ck CHECK (canal_envio IN ('EMAIL', 'SMS'))
);
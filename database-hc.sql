-- Apagar as tabelas na ordem inversa de dependência para evitar erros de FK, caso já existam.
/* DROP TABLE T_NOTIFICACAO;
DROP TABLE T_AGENDAMENTO;
DROP TABLE T_CONSULTA;
DROP TABLE T_PROFISSIONAL_SAUDE;
DROP TABLE T_PACIENTE;
DROP TABLE T_HISTORICO_COMPARECIMENTO;
DROP TABLE T_SISTEMA_ADM;
*/
-- Tabela para armazenar o histórico de comparecimento do paciente
CREATE TABLE T_HISTORICO_COMPARECIMENTO (
    ID_HISTORICO          NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    NR_TOTAL_CONSULTAS    NUMBER(5) DEFAULT 0 NOT NULL,
    NR_COMPARECIMENTOS    NUMBER(5) DEFAULT 0 NOT NULL,
    NR_FALTAS             NUMBER(5) DEFAULT 0 NOT NULL
);

-- Tabela de Pacientes, que herda os atributos de Usuario
CREATE TABLE T_PACIENTE (
    ID_PACIENTE           NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    NM_PACIENTE           VARCHAR2(100) NOT NULL,
    DS_EMAIL              VARCHAR2(100) NOT NULL,
    NR_CPF                VARCHAR2(14) NOT NULL,
    NR_TELEFONE           VARCHAR2(20),
    DS_SENHA              VARCHAR2(255) NOT NULL,
    NR_PRONTUARIO         NUMBER(10) NOT NULL,
    ID_HISTORICO          NUMBER NOT NULL,
    CONSTRAINT UN_PACIENTE_EMAIL UNIQUE (DS_EMAIL),
    CONSTRAINT UN_PACIENTE_CPF UNIQUE (NR_CPF),
    CONSTRAINT UN_PACIENTE_PRONTUARIO UNIQUE (NR_PRONTUARIO),
    CONSTRAINT FK_PACIENTE_HISTORICO FOREIGN KEY (ID_HISTORICO) REFERENCES T_HISTORICO_COMPARECIMENTO(ID_HISTORICO)
);

-- Tabela de Profissionais de Saúde, que também herda de Usuario
CREATE TABLE T_PROFISSIONAL_SAUDE (
    ID_PROFISSIONAL       NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    NM_PROFISSIONAL       VARCHAR2(100) NOT NULL,
    DS_EMAIL              VARCHAR2(100) NOT NULL,
    NR_CPF                VARCHAR2(14) NOT NULL,
    NR_TELEFONE           VARCHAR2(20),
    DS_SENHA              VARCHAR2(255) NOT NULL,
    NR_CRM                NUMBER(10) NOT NULL,
    DS_ESTADO_CRM         CHAR(2) NOT NULL,
    DS_ESPECIALIDADE      VARCHAR2(100) NOT NULL,
    CONSTRAINT UN_PROFISSIONAL_EMAIL UNIQUE (DS_EMAIL),
    CONSTRAINT UN_PROFISSIONAL_CPF UNIQUE (NR_CPF),
    CONSTRAINT UN_PROFISSIONAL_CRM_ESTADO UNIQUE (NR_CRM, DS_ESTADO_CRM)
);

-- Tabela para os detalhes da consulta
CREATE TABLE T_CONSULTA (
    ID_CONSULTA           NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    DS_TIPO_CONSULTA      VARCHAR2(100) NOT NULL,
    DS_DURACAO_ESTIMADA   VARCHAR2(50),
    DS_OBSERVACAO         VARCHAR2(500)
);

-- Tabela principal de Agendamentos, que conecta as demais
CREATE TABLE T_AGENDAMENTO (
    ID_AGENDAMENTO            NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    DT_HR_AGENDAMENTO         TIMESTAMP NOT NULL,
    DS_ESPECIALIDADE          VARCHAR2(100),
    ID_PACIENTE               NUMBER NOT NULL,
    ID_PROFISSIONAL           NUMBER NOT NULL,
    ID_CONSULTA               NUMBER NOT NULL,
    DT_RESPOSTA_CONFIRMACAO   DATE,
    ST_CONFIRMADO             CHAR(1) DEFAULT 'N', -- 'S' para Sim, 'N' para Não
    CONSTRAINT FK_AGENDAMENTO_PACIENTE FOREIGN KEY (ID_PACIENTE) REFERENCES T_PACIENTE(ID_PACIENTE),
    CONSTRAINT FK_AGENDAMENTO_PROFISSIONAL FOREIGN KEY (ID_PROFISSIONAL) REFERENCES T_PROFISSIONAL_SAUDE(ID_PROFISSIONAL),
    CONSTRAINT FK_AGENDAMENTO_CONSULTA FOREIGN KEY (ID_CONSulta) REFERENCES T_CONSULTA(ID_CONSULTA),
    CONSTRAINT CK_AGENDAMENTO_ST_CONFIRMADO CHECK (ST_CONFIRMADO IN ('S', 'N'))
);

-- Tabela para registrar as notificações enviadas
CREATE TABLE T_NOTIFICACAO (
    ID_NOTIFICACAO        NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    DS_MENSAGEM           VARCHAR2(1000) NOT NULL,
    NR_CELULAR_DESTINO    VARCHAR2(20),
    DS_EMAIL_DESTINO      VARCHAR2(100),
    ID_AGENDAMENTO        NUMBER NOT NULL,
    DT_ENVIO              TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT FK_NOTIFICACAO_AGENDAMENTO FOREIGN KEY (ID_AGENDAMENTO) REFERENCES T_AGENDAMENTO(ID_AGENDAMENTO)
);

-- Tabela para os usuários administradores do sistema
CREATE TABLE T_SISTEMA_ADM (
    ID_SISTEMA_ADM        NUMBER GENERATED AS IDENTITY PRIMARY KEY,
    DS_LOGIN_EMAIL        VARCHAR2(100) NOT NULL,
    DS_SENHA              VARCHAR2(255) NOT NULL,
    ST_PERMISSAO          CHAR(1) DEFAULT 'S' NOT NULL, -- 'S' para Sim, 'N' para Não
    CONSTRAINT UN_ADM_LOGIN_EMAIL UNIQUE (DS_LOGIN_EMAIL),
    CONSTRAINT CK_ADM_ST_PERMISSAO CHECK (ST_PERMISSAO IN ('S', 'N'))
);

-- Inserindo um histórico inicial para poder cadastrar um paciente
INSERT INTO T_HISTORICO_COMPARECIMENTO (NR_TOTAL_CONSULTAS, NR_COMPARECIMENTOS, NR_FALTAS) VALUES (0, 0, 0);
COMMIT;